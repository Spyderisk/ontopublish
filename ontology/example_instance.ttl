@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix score: <http://ontology.spyderisk.org/ns/core#> .
@prefix my: <http://ontology.spyderisk.org/p/example#> .

# Instantiation / ontology re-use example
## RDF reification to make statements about statements.

my:RS232_from a score:asset_relation ;
    rdfs:label "example asset relation: dedicated RS232"@en .
my:baud_rate a rdf:Property ;
    rdfs:label "baud rate (float)"@en ;
    rdfs:domain my:RS232_from ;
    rdfs:range  xsd:float .

my:Symbolics3600 a score:Asset ;
    rdfs:label "example asset type instantiation: these are Symbolics 3600 series Lisp Machines"@en .
my:VT100 a score:Asset ;
    rdfs:label "example asset type instantiation: these are VT100 serial terminals"@en ;
    my:RS232_from my:Symbolics3600 .

my:MaliciousMacroAuthor a score:Threat ;
    rdfs:label "example instantiation of a threat: malicious Lisp macro/function author"@en ;
    score:introduces my:MaliciousMacroPattern .

# Reification statements are difficult to query, as they aren't asserted.
# https://stackoverflow.com/questions/24064643/making-statements-about-statements-which-are-no-reified#26938649
# This points to a couple of alternatives:
# - RDF-star (RDF*): https://www.w3.org/2021/12/rdf-star.html
# - rdf:singletonProperty (Nguyen et al. 2014 - https://doi.org/10.1145/2566486.2567973)
# - Something like the below, where we declare that there exists a thing which is
#   a pattern_asset property, which itself has a statement made about it, that it
#   occupies a role, attributing the role to it:

my:pattern_asset_role_Symbolics3600 a score:pattern_asset ;
    score:pattern_asset_role score:role_unique .
my:pattern_asset_role_VT100 a score:pattern_asset ;
    score:pattern_asset_role score:role_unique .

my:MaliciousMacroPattern a score:Pattern ;
    score:pattern_asset_roleVT100 my:VT100 ;
    score:pattern_asset_roleSymbolics3600 my:Symbolics3600 .
#my:MaliciousMacroPattern a score:Pattern ;
#    score:pattern_asset my:VT100, my:Symbolics3600 .
    
## Sample likelihood scheme

my:SampleLikelihood a skos:ConceptScheme ;
    dct:title "Example likelihood level scheme"@en .

my:negligeable_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "negligeable"@en ;
    skos:altLabel   "negligible"@en ;
    rdfs:label      "'negligeable' likelihood"@en .
my:very_low_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "very low"@en ;
    rdfs:label      "'very low' likelihood"@en .
my:low_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "low"@en ;
    rdfs:label      "'low' likelihood"@en .
my:medium_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "medium"@en ;
    rdfs:label      "'medium' likelihood"@en .
my:high_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "high"@en ;
    rdfs:label      "'high' likelihood"@en .
my:very_high_likelihood a skos:Concept, score:Likelihood ;
    skos:inScheme   my:SampleLikelihoodScheme ;
    skos:prefLabel  "very high"@en ;
    rdfs:label      "'very high' likelihood"@en .

my:SampleLikelihoodOrder rdf:type skos:OrderedCollection ;
    skos:prefLabel "likelihood ordering, least likely to most likely"@en ;
    skos:memberList (
        my:negligeable_likelihood
        my:very_low_likelihood
        my:low_likelihood
        my:medium_likelihood
        my:high_likelihood
        my:very_high_likelihood ) .
